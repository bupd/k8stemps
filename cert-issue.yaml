# Before this please install ingress-nginx and then start this process since that would be really beneficial.
# checkout the cert-manager site and get the latest install command for your specific cloud requirements
# for gke: https://kubernetes.github.io/ingress-nginx/deploy/#gce-gke
# for cert-manager: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.16.2/cert-manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-certs
  namespace: demo
spec:
  selector:
    matchLabels:
      app: kube-certs
  template:
    metadata:
      labels:
        app: kube-certs
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: saiyam911/kube-certs:sha-848915f
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: kube-certs
  namespace: demo
spec:
  selector:
    app: kube-certs
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  type: NodePort
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: kubeissuer
  namespace: demo
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: bupdprasanth@gmail.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: kubeissuer
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kubecert
  namespace: demo
spec:
  secretName: harbor-cert
  issuerRef:
    name: kubeissuer
    kind: ClusterIssuer
  commonName: reg1.bupd.xyz
  dnsNames:
  - reg1.bupd.xyz
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: kubeissuer
    kubernetes.io/ingress.class: nginx
  name: kube-certs-ingress
  namespace: demo
spec:
  rules:
  - host: reg1.bupd.xyz
    http:
      paths:
      - backend:
          service:
            name: kube-certs
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - reg1.bupd.xyz
    secretName: harbor-cert
